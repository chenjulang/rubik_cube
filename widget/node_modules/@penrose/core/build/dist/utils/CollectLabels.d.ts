import { PenroseError } from "../types/errors";
import { ShapeAD } from "../types/shape";
import { LabelCache, State } from "../types/state";
import { Result } from "./Error";
/**
 * Get the CSS string for the font setting of a `Text` GPI.
 * @param shape A text GPI
 *
 * NOTE: the `font` CSS rule -> https://developer.mozilla.org/en-US/docs/Web/CSS/font
 *
 * @returns a CSS rule string of its font settings
 */
export declare const toFontRule: ({ properties }: ShapeAD) => string;
export declare const collectLabels: (allShapes: ShapeAD[]) => Promise<Result<LabelCache, PenroseError>>;
export type TextMeasurement = {
    width: number;
    height: number;
    actualDescent: number;
    actualAscent: number;
};
/**
 *
 * @param text the content of the text
 * @param font the CSS font rule for the text
 *
 * NOTE: the `font` CSS rule -> https://developer.mozilla.org/en-US/docs/Web/CSS/font
 * @returns `TextMeasurement` object and includes data such as `width` and `height` of the text.
 */
export declare function measureText(text: string, font: string): TextMeasurement;
export declare const insertPending: (state: State) => State;
//# sourceMappingURL=CollectLabels.d.ts.map