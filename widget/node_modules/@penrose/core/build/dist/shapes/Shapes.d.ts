import * as BBox from "../engine/BBox";
import * as ad from "../types/ad";
import { Value } from "../types/value";
import { Circle } from "./Circle";
import { Ellipse } from "./Ellipse";
import { Equation } from "./Equation";
import { Image } from "./Image";
import { Line } from "./Line";
import { Path } from "./Path";
import { Polygon } from "./Polygon";
import { Polyline } from "./Polyline";
import { Rectangle } from "./Rectangle";
import { Canvas, Context } from "./Samplers";
import { Text } from "./Text";
export interface Properties {
    [k: string]: Value<ad.Num>;
}
export type Shape = Circle | Ellipse | Equation | Image | Line | Path | Polygon | Polyline | Rectangle | Text;
export type ShapeType = Shape["shapeType"];
export interface ShapeDef {
    sampler: (context: Context, canvas: Canvas) => Properties;
    constr: (context: Context, canvas: Canvas, properties: Properties) => Shape;
    propTags: {
        [prop: string]: Value<ad.Num>["tag"];
    };
    bbox: (properties: Properties) => BBox.BBox;
    isLinelike: boolean;
    isRectlike: boolean;
    isPolygonlike: boolean;
    pendingProps: string[];
}
export declare const ShapeDef: (shapedef: {
    sampler: (context: Context, canvas: Canvas) => unknown;
    constr: (context: Context, canvas: Canvas, properties: Properties) => Shape;
    bbox: (properties: any) => BBox.BBox;
    isLinelike?: boolean | undefined;
    isRectlike?: boolean | undefined;
    isPolygonlike?: boolean | undefined;
}) => ShapeDef;
declare const Circle: ShapeDef;
declare const Ellipse: ShapeDef;
declare const Equation: ShapeDef;
declare const Image: ShapeDef;
declare const Line: ShapeDef;
declare const Path: ShapeDef;
declare const Polygon: ShapeDef;
declare const Polyline: ShapeDef;
declare const Rectangle: ShapeDef;
declare const Text: ShapeDef;
export declare const shapedefs: {
    [k in ShapeType]: ShapeDef;
};
export declare const isShapeType: (shapeType: string) => shapeType is "Line" | "Circle" | "Ellipse" | "Path" | "Rectangle" | "Equation" | "Image" | "Polygon" | "Polyline" | "Text";
export {};
//# sourceMappingURL=Shapes.d.ts.map